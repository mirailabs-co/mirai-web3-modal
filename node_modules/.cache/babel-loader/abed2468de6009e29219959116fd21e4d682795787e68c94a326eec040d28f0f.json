{"ast":null,"code":"/**\n * Query String Utilities.\n */\n\nexport class BasicQueryStringUtils {\n  parse(input, useHash) {\n    if (useHash) {\n      return this.parseQueryString(input.hash);\n    } else {\n      return this.parseQueryString(input.search);\n    }\n  }\n  parseQueryString(query) {\n    let result = {};\n    // if anything starts with ?, # or & remove it\n    query = query.trim().replace(/^(\\?|#|&)/, '');\n    let params = query.split('&');\n    for (let i = 0; i < params.length; i += 1) {\n      let param = params[i]; // looks something like a=b\n      let parts = param.split('=');\n      if (parts.length >= 2) {\n        let key = decodeURIComponent(parts.shift());\n        let value = parts.length > 0 ? parts.join('=') : null;\n        if (value) {\n          result[key] = decodeURIComponent(value);\n        }\n      }\n    }\n    return result;\n  }\n  stringify(input) {\n    let encoded = [];\n    for (let key in input) {\n      if (input.hasOwnProperty(key) && input[key]) {\n        encoded.push(\"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(input[key])));\n      }\n    }\n    return encoded.join('&');\n  }\n}","map":{"version":3,"names":["BasicQueryStringUtils","parse","input","useHash","parseQueryString","hash","search","query","result","trim","replace","params","split","i","length","param","parts","key","decodeURIComponent","shift","value","join","stringify","encoded","hasOwnProperty","push","concat","encodeURIComponent"],"sources":["/Users/phuocnd/phuocnd/works/mirai/miraiidjs/src/auth-client/utils/query-utils.ts"],"sourcesContent":["export interface StringMap {\n\t[key: string]: string;\n}\n\n/**\n * Query String Utilities.\n */\nexport interface QueryStringUtils {\n\tstringify(input: StringMap): string;\n\tparse(query: Location, useHash?: boolean): StringMap;\n\tparseQueryString(query: string): StringMap;\n}\n\nexport class BasicQueryStringUtils implements QueryStringUtils {\n\tparse(input: Location, useHash?: boolean) {\n\t\tif (useHash) {\n\t\t\treturn this.parseQueryString(input.hash);\n\t\t} else {\n\t\t\treturn this.parseQueryString(input.search);\n\t\t}\n\t}\n\n\tparseQueryString(query: string): StringMap {\n\t\tlet result: StringMap = {};\n\t\t// if anything starts with ?, # or & remove it\n\t\tquery = query.trim().replace(/^(\\?|#|&)/, '');\n\t\tlet params = query.split('&');\n\t\tfor (let i = 0; i < params.length; i += 1) {\n\t\t\tlet param = params[i]; // looks something like a=b\n\t\t\tlet parts = param.split('=');\n\t\t\tif (parts.length >= 2) {\n\t\t\t\tlet key = decodeURIComponent(parts.shift()!);\n\t\t\t\tlet value = parts.length > 0 ? parts.join('=') : null;\n\t\t\t\tif (value) {\n\t\t\t\t\tresult[key] = decodeURIComponent(value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tstringify(input: StringMap) {\n\t\tlet encoded: string[] = [];\n\t\tfor (let key in input) {\n\t\t\tif (input.hasOwnProperty(key) && input[key]) {\n\t\t\t\tencoded.push(`${encodeURIComponent(key)}=${encodeURIComponent(input[key])}`);\n\t\t\t}\n\t\t}\n\t\treturn encoded.join('&');\n\t}\n}\n"],"mappings":"AAIA;AACA;AACA;;AAOA,OAAO,MAAMA,qBAAqB,CAA6B;EAC9DC,KAAKA,CAACC,KAAe,EAAEC,OAAiB,EAAE;IACzC,IAAIA,OAAO,EAAE;MACZ,OAAO,IAAI,CAACC,gBAAgB,CAACF,KAAK,CAACG,IAAI,CAAC;IACzC,CAAC,MAAM;MACN,OAAO,IAAI,CAACD,gBAAgB,CAACF,KAAK,CAACI,MAAM,CAAC;IAC3C;EACD;EAEAF,gBAAgBA,CAACG,KAAa,EAAa;IAC1C,IAAIC,MAAiB,GAAG,CAAC,CAAC;IAC1B;IACAD,KAAK,GAAGA,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IAC7C,IAAIC,MAAM,GAAGJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MAC1C,IAAIE,KAAK,GAAGJ,MAAM,CAACE,CAAC,CAAC,CAAC,CAAC;MACvB,IAAIG,KAAK,GAAGD,KAAK,CAACH,KAAK,CAAC,GAAG,CAAC;MAC5B,IAAII,KAAK,CAACF,MAAM,IAAI,CAAC,EAAE;QACtB,IAAIG,GAAG,GAAGC,kBAAkB,CAACF,KAAK,CAACG,KAAK,CAAC,CAAE,CAAC;QAC5C,IAAIC,KAAK,GAAGJ,KAAK,CAACF,MAAM,GAAG,CAAC,GAAGE,KAAK,CAACK,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI;QACrD,IAAID,KAAK,EAAE;UACVZ,MAAM,CAACS,GAAG,CAAC,GAAGC,kBAAkB,CAACE,KAAK,CAAC;QACxC;MACD;IACD;IACA,OAAOZ,MAAM;EACd;EAEAc,SAASA,CAACpB,KAAgB,EAAE;IAC3B,IAAIqB,OAAiB,GAAG,EAAE;IAC1B,KAAK,IAAIN,GAAG,IAAIf,KAAK,EAAE;MACtB,IAAIA,KAAK,CAACsB,cAAc,CAACP,GAAG,CAAC,IAAIf,KAAK,CAACe,GAAG,CAAC,EAAE;QAC5CM,OAAO,CAACE,IAAI,IAAAC,MAAA,CAAIC,kBAAkB,CAACV,GAAG,CAAC,OAAAS,MAAA,CAAIC,kBAAkB,CAACzB,KAAK,CAACe,GAAG,CAAC,CAAC,CAAE,CAAC;MAC7E;IACD;IACA,OAAOM,OAAO,CAACF,IAAI,CAAC,GAAG,CAAC;EACzB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}