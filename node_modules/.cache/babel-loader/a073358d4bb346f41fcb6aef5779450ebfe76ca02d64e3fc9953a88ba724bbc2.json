{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/**\n * A wrapper for socket client\n */\nimport { log, SafeEventEmitter } from '@mirailabs-co/types';\nexport class WebSocketConnection {\n  constructor(socket, acknowledgement) {\n    var _this = this;\n    _defineProperty(this, \"socket\", void 0);\n    _defineProperty(this, \"internalEventEmitter\", void 0);\n    // For ack usage\n    _defineProperty(this, \"acknowledgement\", void 0);\n    _defineProperty(this, \"getSocket\", () => {\n      return this.socket;\n    });\n    _defineProperty(this, \"on\", (channel, listener) => {\n      this.socket.on(channel, listener);\n      return () => this.socket.off(channel, listener);\n    });\n    _defineProperty(this, \"once\", (channel, listener) => {\n      this.socket.once(channel, listener);\n      return () => this.socket.removeListener(channel, listener);\n    });\n    _defineProperty(this, \"emit\", function (channel) {\n      if (_this.socket && _this.socket.connected) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        if (_this.acknowledgement) {\n          const t0 = Date.now();\n          log.debug(\"[WS] EVENT: \".concat(channel));\n          _this.socket.emit(channel, ...args, response => {\n            const t1 = Date.now();\n            log.debug(\"[WS] EVENT: \".concat(channel, \" | Time: \").concat(t1 - t0, \"ms\"));\n            if (Array.isArray(response)) {\n              _this.internalEventEmitter.emit(channel, ...response);\n            } else {\n              _this.internalEventEmitter.emit(channel, response);\n            }\n          });\n        } else {\n          _this.socket.emit(channel, ...args);\n        }\n      }\n    });\n    _defineProperty(this, \"connect\", () => {\n      try {\n        if (this.socket && !this.socket.connected) {\n          this.socket.connect();\n          return true;\n        }\n      } catch (e) {\n        console.error(e);\n      }\n      return false;\n    });\n    _defineProperty(this, \"disconnect\", () => {\n      try {\n        if (this.socket && this.socket.connected) {\n          this.socket.removeAllListeners();\n          this.socket.disconnect();\n          return true;\n        }\n      } catch (e) {\n        console.error(e);\n      }\n      return false;\n    });\n    _defineProperty(this, \"timeout\", t => {\n      return this.socket.timeout(t);\n    });\n    _defineProperty(this, \"internal\", () => {\n      return this.internalEventEmitter;\n    });\n    this.socket = socket;\n    this.acknowledgement = acknowledgement;\n    this.internalEventEmitter = new SafeEventEmitter();\n  }\n}","map":{"version":3,"names":["log","SafeEventEmitter","WebSocketConnection","constructor","socket","acknowledgement","_this","_defineProperty","channel","listener","on","off","once","removeListener","connected","_len","arguments","length","args","Array","_key","t0","Date","now","debug","concat","emit","response","t1","isArray","internalEventEmitter","connect","e","console","error","removeAllListeners","disconnect","t","timeout"],"sources":["/Users/phuocnd/phuocnd/works/mirai/miraiidjs/src/sign-provider/transports/websocket/connection-wrapper.ts"],"sourcesContent":["/**\n * A wrapper for socket client\n */\nimport { log, SafeEventEmitter } from '@mirailabs-co/types';\nimport { Socket } from 'socket.io-client';\n\ntype TWsListener = (...args: any) => void;\n\nexport class WebSocketConnection {\n\tprivate socket: Socket;\n\n\tprivate internalEventEmitter: SafeEventEmitter; // For ack usage\n\n\tprivate acknowledgement: boolean;\n\n\tconstructor(socket: Socket, acknowledgement?: boolean) {\n\t\tthis.socket = socket;\n\t\tthis.acknowledgement = acknowledgement;\n\t\tthis.internalEventEmitter = new SafeEventEmitter();\n\t}\n\n\tpublic getSocket = (): Socket => {\n\t\treturn this.socket;\n\t};\n\n\tpublic on = (channel: string, listener: TWsListener): Function => {\n\t\tthis.socket.on(channel, listener);\n\t\treturn () => this.socket.off(channel, listener);\n\t};\n\n\tpublic once = (channel: string, listener: TWsListener): Function => {\n\t\tthis.socket.once(channel, listener);\n\t\treturn () => this.socket.removeListener(channel, listener);\n\t};\n\n\tpublic emit = (channel: string, ...args: any): void => {\n\t\tif (this.socket && this.socket.connected) {\n\t\t\tif (this.acknowledgement) {\n\t\t\t\tconst t0 = Date.now();\n\t\t\t\tlog.debug(`[WS] EVENT: ${channel}`);\n\n\t\t\t\tthis.socket.emit(channel, ...args, (response: any) => {\n\t\t\t\t\tconst t1 = Date.now();\n\t\t\t\t\tlog.debug(`[WS] EVENT: ${channel} | Time: ${t1 - t0}ms`);\n\n\t\t\t\t\tif (Array.isArray(response)) {\n\t\t\t\t\t\tthis.internalEventEmitter.emit(channel, ...response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.internalEventEmitter.emit(channel, response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.socket.emit(channel, ...args);\n\t\t\t}\n\t\t}\n\t};\n\n\tpublic connect = (): boolean => {\n\t\ttry {\n\t\t\tif (this.socket && !this.socket.connected) {\n\t\t\t\tthis.socket.connect();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn false;\n\t};\n\n\tpublic disconnect = (): boolean => {\n\t\ttry {\n\t\t\tif (this.socket && this.socket.connected) {\n\t\t\t\tthis.socket.removeAllListeners();\n\t\t\t\tthis.socket.disconnect();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn false;\n\t};\n\n\tpublic timeout = (t: number): Socket => {\n\t\treturn this.socket.timeout(t);\n\t};\n\n\tpublic internal = (): SafeEventEmitter => {\n\t\treturn this.internalEventEmitter;\n\t};\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}