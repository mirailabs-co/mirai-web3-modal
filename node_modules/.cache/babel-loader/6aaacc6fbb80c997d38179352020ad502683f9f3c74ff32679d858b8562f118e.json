{"ast":null,"code":"import { signMessage } from '../services/actions';\nexport function createWalletClient(_ref) {\n  let {\n    account,\n    chainId,\n    provider\n  } = _ref;\n  const request = async args => {\n    try {\n      return await provider.request(args);\n    } catch (e) {\n      // CATCH EXCEPTION HERE\n      console.log('exception', JSON.parse(e.message));\n      throw new Error(JSON.parse(e.message).message);\n    }\n  };\n  return {\n    account,\n    chainId,\n    request,\n    signMessage: args => {\n      return request({\n        method: 'personal_sign',\n        params: [args.message, account]\n      });\n    }\n  };\n}","map":{"version":3,"names":["signMessage","createWalletClient","_ref","account","chainId","provider","request","args","e","console","log","JSON","parse","message","Error","method","params"],"sources":["/Users/phuocnd/phuocnd/works/mirai/miraiidjs/src/sign-provider/clients/wallet-client.ts"],"sourcesContent":["import { SignMessageArgs, SignMessageResult, signMessage } from '../services/actions';\n\nexport type TWalletClient = {\n\taccount: string;\n\tchainId: number;\n\tprovider: EthereumProvider;\n};\n\nexport interface IWalletClient {\n\taccount: string;\n\tchainId: number;\n\trequest(...args: any): Promise<any>;\n\tsignMessage(args: SignMessageArgs): Promise<SignMessageResult>;\n}\n\ntype EthereumProvider = { request(...args: any): Promise<any> };\n\nexport function createWalletClient({ account, chainId, provider }: TWalletClient) {\n\tconst request = async (args: any) => {\n\t\ttry {\n\t\t\treturn await provider.request(args);\n\t\t} catch (e: any) {\n\t\t\t// CATCH EXCEPTION HERE\n\t\t\tconsole.log('exception', JSON.parse(e.message));\n\t\t\tthrow new Error(JSON.parse(e.message).message);\n\t\t}\n\t};\n\n\treturn {\n\t\taccount,\n\t\tchainId,\n\t\trequest,\n\t\tsignMessage: (args: SignMessageArgs) => {\n\t\t\treturn request({\n\t\t\t\tmethod: 'personal_sign',\n\t\t\t\tparams: [args.message, account],\n\t\t\t});\n\t\t},\n\t} as IWalletClient;\n}\n"],"mappings":"AAAA,SAA6CA,WAAW,QAAQ,qBAAqB;AAiBrF,OAAO,SAASC,kBAAkBA,CAAAC,IAAA,EAAgD;EAAA,IAA/C;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAwB,CAAC,GAAAH,IAAA;EAC/E,MAAMI,OAAO,GAAG,MAAOC,IAAS,IAAK;IACpC,IAAI;MACH,OAAO,MAAMF,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC;IACpC,CAAC,CAAC,OAAOC,CAAM,EAAE;MAChB;MACAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAACK,OAAO,CAAC,CAAC;MAC/C,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACC,KAAK,CAACJ,CAAC,CAACK,OAAO,CAAC,CAACA,OAAO,CAAC;IAC/C;EACD,CAAC;EAED,OAAO;IACNV,OAAO;IACPC,OAAO;IACPE,OAAO;IACPN,WAAW,EAAGO,IAAqB,IAAK;MACvC,OAAOD,OAAO,CAAC;QACdS,MAAM,EAAE,eAAe;QACvBC,MAAM,EAAE,CAACT,IAAI,CAACM,OAAO,EAAEV,OAAO;MAC/B,CAAC,CAAC;IACH;EACD,CAAC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}