{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/**\n * Asynchronous storage APIs. All methods return a `Promise`.\n * All methods take the `DOMString`\n * IDL type (as it is the lowest common denominator).\n */\nexport class StorageBackend {}\n\n/**\n * A `StorageBackend` backed by `localstorage`.\n */\nexport class LocalStorageBackend extends StorageBackend {\n  constructor(storage) {\n    super();\n    _defineProperty(this, \"storage\", void 0);\n    if (window !== undefined && typeof window !== 'undefined') {\n      this.storage = storage || window.localStorage;\n    }\n  }\n  getItem(name) {\n    return new Promise((resolve, reject) => {\n      const value = this.storage.getItem(name);\n      if (value) {\n        resolve(value);\n      } else {\n        resolve(null);\n      }\n    });\n  }\n  removeItem(name) {\n    return new Promise((resolve, reject) => {\n      this.storage.removeItem(name);\n      resolve();\n    });\n  }\n  clear() {\n    return new Promise((resolve, reject) => {\n      this.storage.clear();\n      resolve();\n    });\n  }\n  setItem(name, value) {\n    return new Promise((resolve, reject) => {\n      this.storage.setItem(name, value);\n      resolve();\n    });\n  }\n}","map":{"version":3,"names":["StorageBackend","LocalStorageBackend","constructor","storage","_defineProperty","window","undefined","localStorage","getItem","name","Promise","resolve","reject","value","removeItem","clear","setItem"],"sources":["/Users/phuocnd/phuocnd/works/mirai/miraiidjs/src/auth-client/utils/storage.ts"],"sourcesContent":["export interface UnderlyingStorage {\n\treadonly length: number;\n\tclear(): void;\n\tgetItem(key: string): string | null;\n\tremoveItem(key: string): void;\n\tsetItem(key: string, data: string): void;\n}\n\n/**\n * Asynchronous storage APIs. All methods return a `Promise`.\n * All methods take the `DOMString`\n * IDL type (as it is the lowest common denominator).\n */\nexport abstract class StorageBackend {\n\t/**\n\t * When passed a key `name`, will return that key's value.\n\t */\n\tpublic abstract getItem(name: string): Promise<string | null>;\n\n\t/**\n\t * When passed a key `name`, will remove that key from the storage.\n\t */\n\tpublic abstract removeItem(name: string): Promise<void>;\n\n\t/**\n\t * When invoked, will empty all keys out of the storage.\n\t */\n\tpublic abstract clear(): Promise<void>;\n\n\t/**\n\t * The setItem() method of the `StorageBackend` interface,\n\t * when passed a key name and value, will add that key to the storage,\n\t * or update that key's value if it already exists.\n\t */\n\tpublic abstract setItem(name: string, value: string): Promise<void>;\n}\n\n/**\n * A `StorageBackend` backed by `localstorage`.\n */\nexport class LocalStorageBackend extends StorageBackend {\n\tprivate storage: UnderlyingStorage;\n\tconstructor(storage?: UnderlyingStorage) {\n\t\tsuper();\n\t\tif (window !== undefined && typeof window !== 'undefined') {\n\t\t\tthis.storage = storage || window.localStorage;\n\t\t}\n\t}\n\n\tpublic getItem(name: string): Promise<string | null> {\n\t\treturn new Promise<string | null>((resolve, reject) => {\n\t\t\tconst value = this.storage.getItem(name);\n\t\t\tif (value) {\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\tresolve(null);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic removeItem(name: string): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tthis.storage.removeItem(name);\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tthis.storage.clear();\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic setItem(name: string, value: string): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tthis.storage.setItem(name, value);\n\t\t\tresolve();\n\t\t});\n\t}\n}\n"],"mappings":";AAQA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAeA,cAAc,CAAC;;AAwBrC;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,SAASD,cAAc,CAAC;EAEvDE,WAAWA,CAACC,OAA2B,EAAE;IACxC,KAAK,CAAC,CAAC;IAACC,eAAA;IACR,IAAIC,MAAM,KAAKC,SAAS,IAAI,OAAOD,MAAM,KAAK,WAAW,EAAE;MAC1D,IAAI,CAACF,OAAO,GAAGA,OAAO,IAAIE,MAAM,CAACE,YAAY;IAC9C;EACD;EAEOC,OAAOA,CAACC,IAAY,EAA0B;IACpD,OAAO,IAAIC,OAAO,CAAgB,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtD,MAAMC,KAAK,GAAG,IAAI,CAACV,OAAO,CAACK,OAAO,CAACC,IAAI,CAAC;MACxC,IAAII,KAAK,EAAE;QACVF,OAAO,CAACE,KAAK,CAAC;MACf,CAAC,MAAM;QACNF,OAAO,CAAC,IAAI,CAAC;MACd;IACD,CAAC,CAAC;EACH;EAEOG,UAAUA,CAACL,IAAY,EAAiB;IAC9C,OAAO,IAAIC,OAAO,CAAO,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC7C,IAAI,CAACT,OAAO,CAACW,UAAU,CAACL,IAAI,CAAC;MAC7BE,OAAO,CAAC,CAAC;IACV,CAAC,CAAC;EACH;EAEOI,KAAKA,CAAA,EAAkB;IAC7B,OAAO,IAAIL,OAAO,CAAO,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC7C,IAAI,CAACT,OAAO,CAACY,KAAK,CAAC,CAAC;MACpBJ,OAAO,CAAC,CAAC;IACV,CAAC,CAAC;EACH;EAEOK,OAAOA,CAACP,IAAY,EAAEI,KAAa,EAAiB;IAC1D,OAAO,IAAIH,OAAO,CAAO,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC7C,IAAI,CAACT,OAAO,CAACa,OAAO,CAACP,IAAI,EAAEI,KAAK,CAAC;MACjCF,OAAO,CAAC,CAAC;IACV,CAAC,CAAC;EACH;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}