{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport axios from 'axios';\nimport { HttpConnectionError } from '../../../sign-provider/errors/HttpConnectionError';\nexport class BaseHttpService {\n  constructor(_apiUrl) {\n    var _this = this;\n    _defineProperty(this, \"apiUrl\", void 0);\n    _defineProperty(this, \"sendGet\", async function (path) {\n      var _response$data, _response$data2;\n      let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const urlPath = path.startsWith('/') ? path : \"/\".concat(path);\n      const apiUrl = new URL(\"\".concat(_this.apiUrl).concat(urlPath));\n      for (const key in params) {\n        apiUrl.searchParams.append(key, String(params[key]));\n      }\n      const config = {\n        method: 'GET',\n        url: apiUrl.toString()\n      };\n      await _this.setHeaders(config, headers);\n      const response = await axios(config);\n      console.debug('[HTTP] GET: ', path);\n      if (response.status === 200 || response.status === 201) {\n        return response.data;\n      }\n      throw new HttpConnectionError(response === null || response === void 0 || (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.errorCode, (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message);\n    });\n    _defineProperty(this, \"sendPost\", async function (path, data) {\n      var _response$data3, _response$data4;\n      let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const config = {\n        method: 'POST',\n        data: data,\n        baseURL: _this.apiUrl,\n        url: path,\n        validateStatus: () => true\n      };\n      await _this.setHeaders(config, headers);\n      const response = await axios(config);\n      console.debug('[HTTP] POST: ', path);\n      if (response.status === 200 || response.status === 201) {\n        return response.data;\n      }\n      console.log(response);\n      const message = (response === null || response === void 0 || (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.message) || response.statusText;\n      throw new HttpConnectionError(response === null || response === void 0 || (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.errorCode, message);\n    });\n    this.apiUrl = _apiUrl;\n  }\n  async setHeaders(config) {\n    let headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    config.headers = _objectSpread(_objectSpread({}, headers), {}, {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    });\n  }\n}","map":{"version":3,"names":["axios","HttpConnectionError","BaseHttpService","constructor","apiUrl","_this","_defineProperty","path","_response$data","_response$data2","params","arguments","length","undefined","headers","urlPath","startsWith","concat","URL","key","searchParams","append","String","config","method","url","toString","setHeaders","response","console","debug","status","data","errorCode","message","_response$data3","_response$data4","baseURL","validateStatus","log","statusText","_objectSpread","Accept"],"sources":["/Users/phuocnd/phuocnd/works/mirai/miraiidjs/src/sign-provider/transports/http/http-base.ts"],"sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\nimport { HttpConnectionError } from '../../../sign-provider/errors/HttpConnectionError';\n\nexport abstract class BaseHttpService {\n\tprotected apiUrl: string;\n\n\tconstructor(apiUrl: string) {\n\t\tthis.apiUrl = apiUrl;\n\t}\n\n\tprotected async setHeaders(config: AxiosRequestConfig, headers: Record<string, unknown> = {}): Promise<void> {\n\t\tconfig.headers = {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAccept: 'application/json',\n\t\t};\n\t}\n\n\tpublic sendGet = async <T>(\n\t\tpath: string,\n\t\tparams: Record<string, unknown> = {},\n\t\theaders: Record<string, unknown> = {},\n\t): Promise<T> => {\n\t\tconst urlPath = path.startsWith('/') ? path : `/${path}`;\n\t\tconst apiUrl = new URL(`${this.apiUrl}${urlPath}`);\n\n\t\tfor (const key in params) {\n\t\t\tapiUrl.searchParams.append(key, String(params[key]));\n\t\t}\n\n\t\tconst config: AxiosRequestConfig = {\n\t\t\tmethod: 'GET',\n\t\t\turl: apiUrl.toString(),\n\t\t};\n\n\t\tawait this.setHeaders(config, headers);\n\n\t\tconst response = await axios(config);\n\t\tconsole.debug('[HTTP] GET: ', path);\n\n\t\tif (response.status === 200 || response.status === 201) {\n\t\t\treturn response.data as T;\n\t\t}\n\n\t\tthrow new HttpConnectionError(response?.data?.errorCode, response.data?.message);\n\t};\n\n\tpublic sendPost = async <T>(\n\t\tpath: string,\n\t\tdata?: Record<string, unknown>,\n\t\theaders: Record<string, unknown> = {},\n\t): Promise<T> => {\n\t\tconst config: AxiosRequestConfig = {\n\t\t\tmethod: 'POST',\n\t\t\tdata: data,\n\t\t\tbaseURL: this.apiUrl,\n\t\t\turl: path,\n\t\t\tvalidateStatus: () => true,\n\t\t};\n\n\t\tawait this.setHeaders(config, headers);\n\n\t\tconst response = await axios(config);\n\t\tconsole.debug('[HTTP] POST: ', path);\n\n\t\tif (response.status === 200 || response.status === 201) {\n\t\t\treturn response.data as T;\n\t\t}\n\n\t\tconsole.log(response);\n\n\t\tconst message = response?.data?.message || response.statusText;\n\t\tthrow new HttpConnectionError(response?.data?.errorCode, message);\n\t};\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}