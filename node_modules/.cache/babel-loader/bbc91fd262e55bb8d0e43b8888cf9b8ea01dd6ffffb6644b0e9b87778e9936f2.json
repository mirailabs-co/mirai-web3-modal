{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { io } from 'socket.io-client';\nimport { WebSocketConnection } from './connection-wrapper';\nimport { BaseWebSocketService } from './ws-base';\nexport class SignerWebSocketService extends BaseWebSocketService {\n  constructor(opts) {\n    super(opts);\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"accessToken\", void 0);\n    _defineProperty(this, \"socket\", void 0);\n    _defineProperty(this, \"disconnect\", async () => {\n      return this.socket.disconnect();\n    });\n    _defineProperty(this, \"establish\", async acknowledgement => {\n      const headers = await this.getHeaders(this.accessToken);\n      const socket = io(this.url, {\n        // const socket = io(`${'wss://id-api-dev.mirailabs.co/mpc'}`, {\n        autoConnect: false,\n        reconnection: false,\n        transportOptions: {\n          websocket: {\n            extraHeaders: headers\n          }\n        },\n        extraHeaders: headers,\n        transports: ['websocket'],\n        auth: headers\n      });\n      const ws = new WebSocketConnection(socket, acknowledgement);\n      this.socket = ws;\n      return ws;\n    });\n    this.url = opts.url;\n    this.accessToken = opts.accessToken;\n  }\n}","map":{"version":3,"names":["io","WebSocketConnection","BaseWebSocketService","SignerWebSocketService","constructor","opts","_defineProperty","socket","disconnect","acknowledgement","headers","getHeaders","accessToken","url","autoConnect","reconnection","transportOptions","websocket","extraHeaders","transports","auth","ws"],"sources":["/Users/phuocnd/phuocnd/works/mirai/miraiidjs/src/sign-provider/transports/websocket/ws-signer.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { io } from 'socket.io-client';\nimport { WebSocketConnection } from './connection-wrapper';\nimport { BaseWebSocketService, IWSOpts } from './ws-base';\n\nexport class SignerWebSocketService extends BaseWebSocketService {\n\tprivate url: string;\n\tprivate accessToken: string;\n\n\tpublic socket: WebSocketConnection;\n\n\tconstructor(opts: IWSOpts) {\n\t\tsuper(opts);\n\n\t\tthis.url = opts.url;\n\t\tthis.accessToken = opts.accessToken;\n\t}\n\n\tpublic disconnect = async () => {\n\t\treturn this.socket.disconnect();\n\t};\n\n\tpublic establish = async (acknowledgement?: boolean): Promise<WebSocketConnection> => {\n\t\tconst headers = await this.getHeaders(this.accessToken);\n\n\t\tconst socket = io(this.url, {\n\t\t\t// const socket = io(`${'wss://id-api-dev.mirailabs.co/mpc'}`, {\n\t\t\tautoConnect: false,\n\t\t\treconnection: false,\n\t\t\ttransportOptions: {\n\t\t\t\twebsocket: {\n\t\t\t\t\textraHeaders: headers,\n\t\t\t\t},\n\t\t\t},\n\t\t\textraHeaders: headers,\n\t\t\ttransports: ['websocket'],\n\t\t\tauth: headers,\n\t\t});\n\n\t\tconst ws = new WebSocketConnection(socket, acknowledgement);\n\n\t\tthis.socket = ws;\n\n\t\treturn ws;\n\t};\n}\n"],"mappings":";AAAA;AACA,SAASA,EAAE,QAAQ,kBAAkB;AACrC,SAASC,mBAAmB,QAAQ,sBAAsB;AAC1D,SAASC,oBAAoB,QAAiB,WAAW;AAEzD,OAAO,MAAMC,sBAAsB,SAASD,oBAAoB,CAAC;EAMhEE,WAAWA,CAACC,IAAa,EAAE;IAC1B,KAAK,CAACA,IAAI,CAAC;IAACC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,qBAMO,YAAY;MAC/B,OAAO,IAAI,CAACC,MAAM,CAACC,UAAU,CAAC,CAAC;IAChC,CAAC;IAAAF,eAAA,oBAEkB,MAAOG,eAAyB,IAAmC;MACrF,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,WAAW,CAAC;MAEvD,MAAML,MAAM,GAAGP,EAAE,CAAC,IAAI,CAACa,GAAG,EAAE;QAC3B;QACAC,WAAW,EAAE,KAAK;QAClBC,YAAY,EAAE,KAAK;QACnBC,gBAAgB,EAAE;UACjBC,SAAS,EAAE;YACVC,YAAY,EAAER;UACf;QACD,CAAC;QACDQ,YAAY,EAAER,OAAO;QACrBS,UAAU,EAAE,CAAC,WAAW,CAAC;QACzBC,IAAI,EAAEV;MACP,CAAC,CAAC;MAEF,MAAMW,EAAE,GAAG,IAAIpB,mBAAmB,CAACM,MAAM,EAAEE,eAAe,CAAC;MAE3D,IAAI,CAACF,MAAM,GAAGc,EAAE;MAEhB,OAAOA,EAAE;IACV,CAAC;IA9BA,IAAI,CAACR,GAAG,GAAGR,IAAI,CAACQ,GAAG;IACnB,IAAI,CAACD,WAAW,GAAGP,IAAI,CAACO,WAAW;EACpC;AA6BD"},"metadata":{},"sourceType":"module","externalDependencies":[]}