{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { io } from 'socket.io-client';\nimport { WebSocketConnection } from './connection-wrapper';\nimport { BaseWebSocketService } from './ws-base';\nexport class SignerWebSocketService extends BaseWebSocketService {\n  constructor(opts) {\n    super(opts);\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"authToken\", void 0);\n    _defineProperty(this, \"establish\", async acknowledgement => {\n      const headers = await this.getHeaders(this.authToken);\n      const socket = io(this.url, {\n        // const socket = io(`${'wss://id-api-dev.mirailabs.co/mpc'}`, {\n        autoConnect: false,\n        reconnection: false,\n        transportOptions: {\n          websocket: {\n            extraHeaders: headers\n          }\n        },\n        transports: ['websocket'],\n        extraHeaders: headers\n      });\n      return new WebSocketConnection(socket, acknowledgement);\n    });\n    this.url = opts.url;\n    this.authToken = opts.authToken;\n  }\n}","map":{"version":3,"names":["io","WebSocketConnection","BaseWebSocketService","SignerWebSocketService","constructor","opts","_defineProperty","acknowledgement","headers","getHeaders","authToken","socket","url","autoConnect","reconnection","transportOptions","websocket","extraHeaders","transports"],"sources":["/Users/phuocnd/phuocnd/works/mirai/miraiidjs/src/sign-provider/transports/websocket/ws-signer.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { io } from 'socket.io-client';\nimport { WebSocketConnection } from './connection-wrapper';\nimport { BaseWebSocketService, IWSOpts } from './ws-base';\nimport { auth } from '../../../constants';\n\nexport class SignerWebSocketService extends BaseWebSocketService {\n\tpublic url: string;\n\tpublic authToken: auth.TMiraiToken;\n\n\tconstructor(opts: IWSOpts) {\n\t\tsuper(opts);\n\n\t\tthis.url = opts.url;\n\t\tthis.authToken = opts.authToken;\n\t}\n\n\tpublic establish = async (acknowledgement?: boolean): Promise<WebSocketConnection> => {\n\t\tconst headers = await this.getHeaders(this.authToken);\n\n\t\tconst socket = io(this.url, {\n\t\t\t// const socket = io(`${'wss://id-api-dev.mirailabs.co/mpc'}`, {\n\t\t\tautoConnect: false,\n\t\t\treconnection: false,\n\t\t\ttransportOptions: {\n\t\t\t\twebsocket: {\n\t\t\t\t\textraHeaders: headers,\n\t\t\t\t},\n\t\t\t},\n\t\t\ttransports: ['websocket'],\n\t\t\textraHeaders: headers,\n\t\t});\n\n\t\treturn new WebSocketConnection(socket, acknowledgement);\n\t};\n}\n"],"mappings":";AAAA;AACA,SAASA,EAAE,QAAQ,kBAAkB;AACrC,SAASC,mBAAmB,QAAQ,sBAAsB;AAC1D,SAASC,oBAAoB,QAAiB,WAAW;AAGzD,OAAO,MAAMC,sBAAsB,SAASD,oBAAoB,CAAC;EAIhEE,WAAWA,CAACC,IAAa,EAAE;IAC1B,KAAK,CAACA,IAAI,CAAC;IAACC,eAAA;IAAAA,eAAA;IAAAA,eAAA,oBAMM,MAAOC,eAAyB,IAAmC;MACrF,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,SAAS,CAAC;MAErD,MAAMC,MAAM,GAAGX,EAAE,CAAC,IAAI,CAACY,GAAG,EAAE;QAC3B;QACAC,WAAW,EAAE,KAAK;QAClBC,YAAY,EAAE,KAAK;QACnBC,gBAAgB,EAAE;UACjBC,SAAS,EAAE;YACVC,YAAY,EAAET;UACf;QACD,CAAC;QACDU,UAAU,EAAE,CAAC,WAAW,CAAC;QACzBD,YAAY,EAAET;MACf,CAAC,CAAC;MAEF,OAAO,IAAIP,mBAAmB,CAACU,MAAM,EAAEJ,eAAe,CAAC;IACxD,CAAC;IArBA,IAAI,CAACK,GAAG,GAAGP,IAAI,CAACO,GAAG;IACnB,IAAI,CAACF,SAAS,GAAGL,IAAI,CAACK,SAAS;EAChC;AAoBD"},"metadata":{},"sourceType":"module","externalDependencies":[]}