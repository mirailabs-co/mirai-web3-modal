{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n// export type State = {\n// \tchains?: Connector['chains'];\n// \tconnector?: Connector;\n// \tconnectors: Connector[];\n// \tstatus: 'connected' | 'connecting' | 'reconnecting' | 'disconnected';\n// };\nexport class Core {\n  constructor(opts) {\n    _defineProperty(this, \"connection\", void 0);\n    _defineProperty(this, \"chains\", void 0);\n    _defineProperty(this, \"namespace\", void 0);\n  }\n}","map":{"version":3,"names":["Core","constructor","opts","_defineProperty"],"sources":["/Users/phuocnd/phuocnd/works/mirai/miraiidjs/src/sign-provider/cores/core.ts"],"sourcesContent":["import { Connection } from '../connection/connection';\nimport { Chain } from '../../constants/chains';\n\n// export type State = {\n// \tchains?: Connector['chains'];\n// \tconnector?: Connector;\n// \tconnectors: Connector[];\n// \tstatus: 'connected' | 'connecting' | 'reconnecting' | 'disconnected';\n// };\n\nexport type ICore = {\n\tclientId: string;\n\tmetaData: { name: string; description: string; icons: string[] };\n\tredirectUrl: string;\n\tchains: Chain[];\n\tchainNameSpace: string;\n\tonOpenConnection: (url: string) => Promise<void>;\n};\n\nexport abstract class Core {\n\tconstructor(opts: ICore) {}\n\n\tabstract connection: Connection;\n\tabstract chains: Chain[];\n\tabstract namespace: string;\n\n\tpublic abstract connect({ accessToken }: { accessToken: string }): Promise<Connection>;\n\tpublic abstract disconect(connection: Connection): Promise<void>;\n\tpublic abstract disconectAll(): Promise<void>;\n}\n"],"mappings":";AAGA;AACA;AACA;AACA;AACA;AACA;AAWA,OAAO,MAAeA,IAAI,CAAC;EAC1BC,WAAWA,CAACC,IAAW,EAAE;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;EAAC;AAS3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}